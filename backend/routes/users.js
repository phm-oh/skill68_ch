// backend/routes/users.js
// Routes ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ

const express = require('express');
const router = express.Router();

// Import Controllers ‡πÅ‡∏•‡∏∞ Middleware
const userController = require('../controllers/userController');
const { authenticateToken, requireRole } = require('../middleware/auth');
const { body } = require('express-validator');
const { handleValidationErrors } = require('../middleware/validation');

// Validation ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
const validateUserUpdate = [
  body('full_name')
    .optional()
    .isLength({ min: 2, max: 100 })
    .withMessage('‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ 2-100 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£'),
  
  body('email')
    .optional()
    .isEmail()
    .withMessage('‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á')
    .normalizeEmail(),
  
  body('department')
    .optional()
    .isLength({ max: 100 })
    .withMessage('‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏ú‡∏ô‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 100 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£'),
  
  body('position')
    .optional()
    .isLength({ max: 100 })
    .withMessage('‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 100 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£'),
  
  handleValidationErrors
];

// Validation ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
const validateStatusUpdate = [
  body('status')
    .isIn(['active', 'inactive'])
    .withMessage('‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô active ‡∏´‡∏£‡∏∑‡∏≠ inactive'),
  
  handleValidationErrors
];

// Route: GET /api/users
// ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ HR)
router.get('/', 
  authenticateToken, 
  requireRole('hr'), 
  userController.getAllUsers
);

// Route: GET /api/users/search
// ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ HR ‡πÅ‡∏•‡∏∞ Committee)
router.get('/search', 
  authenticateToken, 
  requireRole(['hr', 'committee']), 
  userController.searchUsers
);

// Route: GET /api/users/:id
// ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏° ID
router.get('/:id', 
  authenticateToken,
  (req, res, next) => {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå: HR ‡∏î‡∏π‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô, ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏î‡∏π‡πÑ‡∏î‡πâ‡πÅ‡∏Ñ‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
    const requestedId = parseInt(req.params.id);
    const currentUserId = req.user.id;
    const userRole = req.user.role;
    
    if (userRole === 'hr' || requestedId === currentUserId) {
      next();
    } else {
      return res.status(403).json({
        success: false,
        message: '‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏£‡∏≤‡∏¢‡∏ô‡∏µ‡πâ'
      });
    }
  },
  userController.getUserById
);

// Route: PUT /api/users/:id
// ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
router.put('/:id', 
  authenticateToken,
  (req, res, next) => {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå: HR ‡πÅ‡∏Å‡πâ‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô, ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÅ‡∏Å‡πâ‡πÑ‡∏î‡πâ‡πÅ‡∏Ñ‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
    const requestedId = parseInt(req.params.id);
    const currentUserId = req.user.id;
    const userRole = req.user.role;
    
    if (userRole === 'hr' || requestedId === currentUserId) {
      next();
    } else {
      return res.status(403).json({
        success: false,
        message: '‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏£‡∏≤‡∏¢‡∏ô‡∏µ‡πâ'
      });
    }
  },
  validateUserUpdate,
  userController.updateUser
);

// Route: PATCH /api/users/:id/status
// ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ HR)
router.patch('/:id/status', 
  authenticateToken, 
  requireRole('hr'), 
  validateStatusUpdate,
  userController.updateUserStatus
);

// Route: DELETE /api/users/:id
// ‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ HR)
router.delete('/:id', 
  authenticateToken, 
  requireRole('hr'), 
  userController.deleteUser
);

// Route ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
router.get('/test/info', (req, res) => {
  res.json({
    success: true,
    message: 'üë• User routes working!',
    endpoints: {
      getAllUsers: 'GET /api/users (HR only)',
      searchUsers: 'GET /api/users/search?q=keyword&role=hr (HR/Committee)',
      getUserById: 'GET /api/users/:id',
      updateUser: 'PUT /api/users/:id',
      updateStatus: 'PATCH /api/users/:id/status (HR only)',
      deleteUser: 'DELETE /api/users/:id (HR only)'
    },
    permissions: {
      hr: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô',
      committee: '‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ',
      evaluatee: '‡∏î‡∏π‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô'
    }
  });
});

module.exports = router;